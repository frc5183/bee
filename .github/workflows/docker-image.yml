name: Docker Image CI


env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

on:
  push:
    branches: [ "master" ]
    paths:
      - 'Dockerfile'
      - 'build.gradle'
      - 'gradle/**'
      - 'gradlew'
      - 'gradlew.bat'
      - 'settings.gradle'
      - 'src/**'
      - '.github/workflows/*'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Install cosign
      uses: sigstore/cosign-installer@f3c664df7af409cb4873aa5068053ba9d61a57b6
      with:
        cosign-release: 'v1.13.1'
        
    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf  
    
    - name: Login to GCR
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
      with:
        context: .
        push: true
        tags: frc5183/beeapi:latest
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Sign the published Docker image
      env:
        COSIGN_EXPERIMENTAL: "true"
      run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}
